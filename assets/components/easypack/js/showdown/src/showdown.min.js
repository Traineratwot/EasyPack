
var showdown={},parsers={},extensions={},globalOptions=getDefaultOpts(true),setFlavor='vanilla',flavor={github:{omitExtraWLInCodeBlocks:true,simplifiedAutoLink:true,literalMidWordUnderscores:true,strikethrough:true,tables:true,tablesHeaderId:true,ghCodeBlocks:true,tasklists:true,disableForced4SpacesIndentedSublists:true,simpleLineBreaks:true,requireSpaceBeforeHeadingText:true,ghCompatibleHeaderId:true,ghMentions:true,backslashEscapesHTMLTags:true,emoji:true,splitAdjacentBlockquotes:true},original:{noHeaderId:true,ghCodeBlocks:false},ghost:{omitExtraWLInCodeBlocks:true,parseImgDimensions:true,simplifiedAutoLink:true,literalMidWordUnderscores:true,strikethrough:true,tables:true,tablesHeaderId:true,ghCodeBlocks:true,tasklists:true,smoothLivePreview:true,simpleLineBreaks:true,requireSpaceBeforeHeadingText:true,ghMentions:false,encodeEmails:true},vanilla:getDefaultOpts(true),allOn:allOptionsOn()};showdown.helper={};showdown.extensions={};showdown.setOption=function(key,value){'use strict';globalOptions[key]=value;return this;};showdown.getOption=function(key){'use strict';return globalOptions[key];};showdown.getOptions=function(){'use strict';return globalOptions;};showdown.resetOptions=function(){'use strict';globalOptions=getDefaultOpts(true);};showdown.setFlavor=function(name){'use strict';if(!flavor.hasOwnProperty(name)){throw Error(name+' flavor was not found');}
showdown.resetOptions();var preset=flavor[name];setFlavor=name;for(var option in preset){if(preset.hasOwnProperty(option)){globalOptions[option]=preset[option];}}};showdown.getFlavor=function(){'use strict';return setFlavor;};showdown.getFlavorOptions=function(name){'use strict';if(flavor.hasOwnProperty(name)){return flavor[name];}};showdown.getDefaultOptions=function(simple){'use strict';return getDefaultOpts(simple);};showdown.subParser=function(name,func){'use strict';if(showdown.helper.isString(name)){if(typeof func!=='undefined'){parsers[name]=func;}else{if(parsers.hasOwnProperty(name)){return parsers[name];}else{throw Error('SubParser named '+name+' not registered!');}}}else{throw Error('showdown.subParser function first argument must be a string (the name of the subparser)');}};showdown.extension=function(name,ext){'use strict';if(!showdown.helper.isString(name)){throw Error('Extension \'name\' must be a string');}
name=showdown.helper.stdExtName(name);if(showdown.helper.isUndefined(ext)){if(!extensions.hasOwnProperty(name)){throw Error('Extension named '+name+' is not registered!');}
return extensions[name];}else{if(typeof ext==='function'){ext=ext();}
if(!showdown.helper.isArray(ext)){ext=[ext];}
var validExtension=validate(ext,name);if(validExtension.valid){extensions[name]=ext;}else{throw Error(validExtension.error);}}};showdown.getAllExtensions=function(){'use strict';return extensions;};showdown.removeExtension=function(name){'use strict';delete extensions[name];};showdown.resetExtensions=function(){'use strict';extensions={};};function validate(extension,name){'use strict';var errMsg=(name)?'Error in '+name+' extension->':'Error in unnamed extension',ret={valid:true,error:''};if(!showdown.helper.isArray(extension)){extension=[extension];}
for(var i=0;i<extension.length;++i){var baseMsg=errMsg+' sub-extension '+i+': ',ext=extension[i];if(typeof ext!=='object'){ret.valid=false;ret.error=baseMsg+'must be an object, but '+typeof ext+' given';return ret;}
if(!showdown.helper.isString(ext.type)){ret.valid=false;ret.error=baseMsg+'property "type" must be a string, but '+typeof ext.type+' given';return ret;}
var type=ext.type=ext.type.toLowerCase();if(type==='language'){type=ext.type='lang';}
if(type==='html'){type=ext.type='output';}
if(type!=='lang'&&type!=='output'&&type!=='listener'){ret.valid=false;ret.error=baseMsg+'type '+type+' is not recognized. Valid values: "lang/language", "output/html" or "listener"';return ret;}
if(type==='listener'){if(showdown.helper.isUndefined(ext.listeners)){ret.valid=false;ret.error=baseMsg+'. Extensions of type "listener" must have a property called "listeners"';return ret;}}else{if(showdown.helper.isUndefined(ext.filter)&&showdown.helper.isUndefined(ext.regex)){ret.valid=false;ret.error=baseMsg+type+' extensions must define either a "regex" property or a "filter" method';return ret;}}
if(ext.listeners){if(typeof ext.listeners!=='object'){ret.valid=false;ret.error=baseMsg+'"listeners" property must be an object but '+typeof ext.listeners+' given';return ret;}
for(var ln in ext.listeners){if(ext.listeners.hasOwnProperty(ln)){if(typeof ext.listeners[ln]!=='function'){ret.valid=false;ret.error=baseMsg+'"listeners" property must be an hash of [event name]: [callback]. listeners.'+ln+' must be a function but '+typeof ext.listeners[ln]+' given';return ret;}}}}
if(ext.filter){if(typeof ext.filter!=='function'){ret.valid=false;ret.error=baseMsg+'"filter" must be a function, but '+typeof ext.filter+' given';return ret;}}else if(ext.regex){if(showdown.helper.isString(ext.regex)){ext.regex=new RegExp(ext.regex,'g');}
if(!(ext.regex instanceof RegExp)){ret.valid=false;ret.error=baseMsg+'"regex" property must either be a string or a RegExp object, but '+typeof ext.regex+' given';return ret;}
if(showdown.helper.isUndefined(ext.replace)){ret.valid=false;ret.error=baseMsg+'"regex" extensions must implement a replace string or function';return ret;}}}
return ret;}
showdown.validateExtension=function(ext){'use strict';var validateExtension=validate(ext,null);if(!validateExtension.valid){console.warn(validateExtension.error);return false;}
return true;};
//# sourceMappingURL=showdown.min.js.map

//# sourceMappingURL=showdown.min.js.map
