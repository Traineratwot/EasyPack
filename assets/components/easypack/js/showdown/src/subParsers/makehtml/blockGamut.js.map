{"version":3,"names":[],"mappings":"","sources":["assets/components/easypack/js/showdown/src/subParsers/makehtml/blockGamut.js"],"sourcesContent":["/**\n * These are all the transformations that form block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('makehtml.blockGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('makehtml.blockGamut.before', text, options, globals).getText();\n\n  // we parse blockquotes first so that we can have headings and hrs\n  // inside blockquotes\n  text = showdown.subParser('makehtml.blockQuotes')(text, options, globals);\n  text = showdown.subParser('makehtml.headers')(text, options, globals);\n\n  // Do Horizontal Rules:\n  text = showdown.subParser('makehtml.horizontalRule')(text, options, globals);\n\n  text = showdown.subParser('makehtml.lists')(text, options, globals);\n  text = showdown.subParser('makehtml.codeBlocks')(text, options, globals);\n  text = showdown.subParser('makehtml.tables')(text, options, globals);\n\n  // We already ran _HashHTMLBlocks() before, in Markdown(), but that\n  // was to escape raw HTML in the original Markdown source. This time,\n  // we're escaping the markup we've just created, so that we don't wrap\n  // <p> tags around block-level tags.\n  text = showdown.subParser('makehtml.hashHTMLBlocks')(text, options, globals);\n  text = showdown.subParser('makehtml.paragraphs')(text, options, globals);\n\n  text = globals.converter._dispatch('makehtml.blockGamut.after', text, options, globals).getText();\n\n  return text;\n});\n\n\n"],"file":"blockGamut.js"}