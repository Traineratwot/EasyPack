{"version":3,"names":[],"mappings":"","sources":["assets/components/easypack/js/showdown/src/subParsers/makehtml/hashHTMLSpans.min.js"],"sourcesContent":["\nshowdown.subParser('makehtml.hashHTMLSpans',function(text,options,globals){'use strict';text=globals.converter._dispatch('makehtml.hashHTMLSpans.before',text,options,globals).getText();text=text.replace(/<[^>]+?\\/>/gi,function(wm){return showdown.helper._hashHTMLSpan(wm,globals);});text=text.replace(/<([^>]+?)>[\\s\\S]*?<\\/\\1>/g,function(wm){return showdown.helper._hashHTMLSpan(wm,globals);});text=text.replace(/<([^>]+?)\\s[^>]+?>[\\s\\S]*?<\\/\\1>/g,function(wm){return showdown.helper._hashHTMLSpan(wm,globals);});text=text.replace(/<[^>]+?>/gi,function(wm){return showdown.helper._hashHTMLSpan(wm,globals);});text=globals.converter._dispatch('makehtml.hashHTMLSpans.after',text,options,globals).getText();return text;});showdown.subParser('makehtml.unhashHTMLSpans',function(text,options,globals){'use strict';text=globals.converter._dispatch('makehtml.unhashHTMLSpans.before',text,options,globals).getText();for(var i=0;i<globals.gHtmlSpans.length;++i){var repText=globals.gHtmlSpans[i],limit=0;while(/¨C(\\d+)C/.test(repText)){var num=RegExp.$1;repText=repText.replace('¨C'+num+'C',globals.gHtmlSpans[num]);if(limit===10){console.error('maximum nesting of 10 spans reached!!!');break;}\n++limit;}\ntext=text.replace('¨C'+i+'C',repText);}\ntext=globals.converter._dispatch('makehtml.unhashHTMLSpans.after',text,options,globals).getText();return text;});\n//# sourceMappingURL=hashHTMLSpans.min.js.map\n"],"file":"hashHTMLSpans.min.js"}